#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
#include<assert.h>
//int main(){
//	char *c[] = { "ENTER", "NEW", "POINT", "FIRST" };
//	char **cp[] = { c + 3, c + 2, c + 1, c };
//	char***cpp = acp;
//	printf("%s\n", **++cpp);//POINT
//	printf("%s\n", *--*++cpp + 3);//ER
//	printf("%s\n", *cpp[-2] + 3);//ST
//	printf("%s\n", cpp[-1][-1] + 1);//EW
//	return 0;
//}

//int main()
//{
//	unsigned long p[] = { 6, 7, 8, 9, 10 };
//	unsigned long *pp;
//	pp = p;
//	*(pp + 3) += 3;
//	printf("%d,%d\n", *pp, *(pp + 3));
//	return 0;
//}
//让输入的字符串逆序
//void reverse(char* str)
//{
//	assert(str);
//	int len = strlen(str);
//	char* left = str;
//	char* right = str + len - 1;
//	while (left<right)
//	{
//		char tmp = *left;
//		*left = *right;
//		*right = tmp;
//		left++;
//		right--;
//	}
//}
//int main()
//{
//	char arr[256] = { 0 };
//	//scanf("%s", arr);//abcdef---->fedcba
//	//逆序函数
//	gets(arr);//读取一行
//	reverse(arr);
//	printf("%s\n",arr);
//	return 0;
//}

int main(){
	int a = 0;
	int n = 0;
	scanf("%d%d", &a, &n);
	int sum = 0;
	int i = 0;
	int ret = 0;
	for (i = 0; i < n; i++)
	{
		ret = ret * 10 + a;
		sum = sum + ret;
	}
	printf("%d\n", sum);
	return 0;
}
