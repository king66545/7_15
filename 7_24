#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
//struct stu
//{
//	char name[20];
//	int age;
//};
//int bijiao(const void*e1, const void*e2)
//{
//	return ((struct stu*)e1)->age - ((struct stu*)e2)->age;
//}
//void test()
//{
//	struct stu s[3] = { { "zhang", 20 }, { "li", 25 }, { "wang", 15 } };
//	int sz = sizeof(s) / sizeof(s[0]);
//	qsort(s, sz, sizeof(s[0]), bijiao);
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%s ",s[i].name);
//		printf("%d\n", s[i].age);
//	}
//	
//
//}
//int main()
//{
//	test();
//}
int main(){
	int a[] = { 1, 2, 3, 4 };
	printf("%d\n", sizeof(a));      //16
	printf("%d\n", sizeof(a+0));    //4
	printf("%d\n", sizeof(*a));     //4 数组名是首元素地
	printf("%d\n", sizeof(a+1));    //4 第二个元素的地址
	printf("%d\n", sizeof(a[1]));   //4 第二个元素大小
	printf("%d\n", sizeof(&a));     //4 取出的是数组的地址，但是数组的地址也是地址，地址的大小都是4个字节
	printf("%d\n", sizeof(*&a));    //16
	printf("%d\n", sizeof(&a+1));   //4
	printf("%d\n", sizeof(&a[0]));  //4
	printf("%d\n", sizeof(&a[0]+1));//8
	//数组名是首元素地
	//1.sizeof（数组名）-数组名表示整个数组
	//2.&数组名-数组名表示整个数组
	return 0;
}
