#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
//int main(){
//	int arr[5];//arr是一个5个元素的整形数组
//	int *parr1[10];//parr1是一个数组，数组有10个元素，每个元素的类型是int*，parr1是指针数组
//	int(*parr2)[10];//parr2是一个指针，该指针指向了一个数组，数组有10个元素，每个元素的类型是int，
//	//parr2是数组指针
//	int(*parr3[10])[5];//parr3是一个数组，该数组有10个元素，每个元素是一个数组指针，
//	//该数组指针指向的数组有五个元素，每个元素是int
//	return 0;
//}

//int main(){
//	char c = 'w';
//	char* p = &c;
//	const char *p2 = "abcdf";
//	int i = 0;
//	for (i = 0; i < 5; i++)
//	{
//		printf("%c ", *p2 + i);
//	}
//	
//	return 0;
//}
//void test(int arr[])
//{}
//void test(int arr[10])
//{}
//void test(int *arr)
//{}
//void test2(int *arr[20])
//{}
//void test2(int **arr2)
//{}
//int main(){
//	int arr[10];
//	int *arr2[20];
//	test(arr);
//	test2(arr2);
//	return 0;
//}

//void test(int arr[3][5])
//{}
//void test(int arr[][5])//二维数组传参只能省略行不能省略列
//{}
////void test(int arr[3][])//不行
////{}
////void test(int **arr)//不行
////{}
//void test(int (*arr)[5])
//{}
//int main(){
//	int arr[3][5] = { 0 };
//	return 0;
//}

//void test(int *p, int sz)
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", *p + i);
//	}
//}
//int main(){
//	int arr[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
//	int *p = arr;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	test(p, sz);
//	return 0;
//}

//void test(int* p1)
//{}
//int main(){
//	int a = 10;
//	int* p1=&a;
//	test(&a);
//	test(p1);
//	return 0;
//}

void test(int **x)
{}
int main(){
	int n = 10;
	int *p = &n;
	int *x = &p;
	test(x);
	test(&p);
	int* arr[10];//一级指针数组
	test(arr);
	return 0;
}
