#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<string.h>
#include<assert.h>

//int main()
//{
//	char arr1[30] = "hello";
//	char arr2[] = "world";
//	strcat(arr1, arr2);
//	printf("%s\n", arr1);
//	return 0;
//}
//void my_strcat(char* dest, char* src)
//{
//	char* ret = dest;
//	assert(dest!=NULL&&src!=NULL);
//	//1.找到目的字符串的'\0'
//	while (*dest != '\0')
//	{
//		dest++;
//	}
//	//2.追加
//	while (*dest++ = *src++)//*dest='\0'=0
//	{
//		;
//	}
//	return ret;
//}
//int main()
//{
//	char arr1[30] = "hello";
//	char arr2[] = "world";
//	my_strcat(arr1, arr2);
//	printf("%s\n", arr1);
//	return 0;
//}

//int main(){
//	int* p1 = "abcde";
//	int* p2 = "aadfe";
//	//int ret = strcmp(p1, p2);//一个一个字符比较，比较ASCLL值
//	//比较函数p1>p2返回1
//	//p1<p2返回-1；p1=p2返回0
//	if (strcmp(p1, p2) > 0)
//	{
//		printf("p1>p2\n");
//	}
//	else if (strcmp(p1, p2) < 0)
//	{
//		printf("p1<p2\n");
//	}
//	if (strcmp(p1, p2) == 0)
//	{
//		printf("p1=p2\n");
//	}
//	//printf("%d\n", ret);
//	return 0;
//}

int my_strcmp(const char* str1, const char* str2)
{
	assert(str1&&str2);
	while (*str1 == *str2)
	{
		if (*str1 == '\0')
		{
			return 0;
		}
		str1++;
		str2++;
	}
	return (*str1 - *str2);
	/*if (*str1 > *str2)
		return 1;
	else
		return -1;*/
}
//比较字符串的大小
int main()
{
	char* p1 = "abca";
	char* p2 = "abcd";
	int ret = my_strcmp(p1, p2);
	printf("ret = %d\n", ret);
	return 0;
}
